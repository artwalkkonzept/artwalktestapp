{"ast":null,"code":"import _objectSpread from \"/Users/admin/Desktop/artwalktestapp/artwalktestapp-hooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/admin/Desktop/artwalktestapp/artwalktestapp-hooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from 'redux';\n/**\n * This artwalks reducer function implements these actions:\n * - ADD_ARTWALK: Add a new artwalk object to the redux store. New id is picked by random. \n * - ADD_BILD: Add a new bild to one of the artwalks in the redux store. Find artwalk by id.\n*/\n\nfunction artwalks() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_ARTWALK':\n      {\n        var artwalk = {\n          _id: action.id,\n          name: action.name,\n          bilds: action.bilds\n        };\n        return [].concat(_toConsumableArray(state), [artwalk]);\n      }\n\n    case 'ADD_BILD':\n      {\n        return state.map(function (artwalk) {\n          return artwalk._id === action.artwalkId ? _objectSpread(_objectSpread({}, artwalk), {}, {\n            bilds: [].concat(_toConsumableArray(artwalk.bilds), [action.bild])\n          }) : artwalk;\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport { artwalks };\nexport default combineReducers({\n  artwalks: artwalks\n});","map":{"version":3,"sources":["/Users/admin/Desktop/artwalktestapp/artwalktestapp-hooks/client/src/reducers/index.js"],"names":["combineReducers","artwalks","state","action","type","artwalk","_id","id","name","bilds","map","artwalkId","bild"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,QAAT,GAAsC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AAAoB;AAClB,YAAMC,OAAO,GAAG;AACdC,UAAAA,GAAG,EAAEH,MAAM,CAACI,EADE;AAEdC,UAAAA,IAAI,EAAEL,MAAM,CAACK,IAFC;AAGdC,UAAAA,KAAK,EAAEN,MAAM,CAACM;AAHA,SAAhB;AAKA,4CAAWP,KAAX,IAAkBG,OAAlB;AACD;;AACD,SAAK,UAAL;AAAiB;AACf,eAAOH,KAAK,CAACQ,GAAN,CAAU,UAAAL,OAAO;AAAA,iBAAIA,OAAO,CAACC,GAAR,KAAgBH,MAAM,CAACQ,SAAvB,mCACvBN,OADuB;AACdI,YAAAA,KAAK,+BAAMJ,OAAO,CAACI,KAAd,IAAqBN,MAAM,CAACS,IAA5B;AADS,eAC6BP,OADjC;AAAA,SAAjB,CAAP;AAED;;AAED;AAAS,aAAOH,KAAP;AAdX;AAgBD;;AAED,SAAQD,QAAR;AAEA,eAAeD,eAAe,CAAC;AAC7BC,EAAAA,QAAQ,EAARA;AAD6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\n/**\n * This artwalks reducer function implements these actions:\n * - ADD_ARTWALK: Add a new artwalk object to the redux store. New id is picked by random. \n * - ADD_BILD: Add a new bild to one of the artwalks in the redux store. Find artwalk by id.\n*/\nfunction artwalks(state = [], action) {\n  switch (action.type) {\n    case 'ADD_ARTWALK': {\n      const artwalk = {\n        _id: action.id,\n        name: action.name,\n        bilds: action.bilds\n      };\n      return [...state, artwalk];\n    }\n    case 'ADD_BILD': {\n      return state.map(artwalk => artwalk._id === action.artwalkId ?\n      { ...artwalk, bilds: [...artwalk.bilds, action.bild] } : artwalk);\n    }\n    \n    default: return state;\n  }\n}\n\nexport {artwalks};\n\nexport default combineReducers({\n  artwalks\n})\n"]},"metadata":{},"sourceType":"module"}