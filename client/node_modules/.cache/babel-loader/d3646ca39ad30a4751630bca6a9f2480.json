{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Desktop/artwalktestappen/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _createForOfIteratorHelper from \"/Users/admin/Desktop/artwalktestappen/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/artwalktestappen/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var addHobby = function addHobby(artwalkId, hobby) {\n  return {\n    type: 'ADD_HOBBY',\n    hobby: hobby,\n    artwalkId: artwalkId\n  };\n};\nexport var addKitten = function addKitten(id, name, hobbies) {\n  return {\n    type: 'ADD_KITTEN',\n    id: id,\n    name: name,\n    hobbies: hobbies\n  };\n};\nvar API_URL = process.env.REACT_APP_API_URL;\nexport var fetchKittens = function fetchKittens(_) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var url, result, data, _iterator, _step, artwalk;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"\".concat(API_URL, \"/artwalks\");\n              console.log(\"Fetching from \".concat(url));\n              _context.next = 4;\n              return fetch(url);\n\n            case 4:\n              result = _context.sent;\n              _context.next = 7;\n              return result.json();\n\n            case 7:\n              data = _context.sent;\n              _iterator = _createForOfIteratorHelper(data);\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  artwalk = _step.value;\n                  dispatch(addKitten(artwalk._id, artwalk.name, artwalk.hobbies));\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var postKitten = function postKitten(name) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response, newKitten;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"\".concat(API_URL, \"/kittens\"), {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json; charset=utf-8\"\n                },\n                body: JSON.stringify({\n                  name: name\n                })\n              });\n\n            case 2:\n              response = _context2.sent;\n              _context2.next = 5;\n              return response.json();\n\n            case 5:\n              newKitten = _context2.sent;\n              dispatch(addKitten(newKitten._id, newKitten.name, newKitten.hobbies));\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var postHobby = function postHobby(kittenId, hobby) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var response, kitten;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(\"\".concat(API_URL, \"/kittens/\").concat(kittenId, \"/hobbies\"), {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json; charset=utf-8\"\n                },\n                body: JSON.stringify({\n                  hobby: hobby\n                })\n              });\n\n            case 2:\n              response = _context3.sent;\n              _context3.next = 5;\n              return response.json();\n\n            case 5:\n              kitten = _context3.sent;\n              dispatch(addHobby(kitten._id, hobby));\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/admin/Desktop/artwalktestappen/client/src/actions/index.js"],"names":["addHobby","artwalkId","hobby","type","addKitten","id","name","hobbies","API_URL","process","env","REACT_APP_API_URL","fetchKittens","_","dispatch","url","console","log","fetch","result","json","data","artwalk","_id","postKitten","method","headers","body","JSON","stringify","response","newKitten","postHobby","kittenId","kitten"],"mappings":";;;AAAA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAYC,KAAZ;AAAA,SAAuB;AAC7CC,IAAAA,IAAI,EAAE,WADuC;AAE7CD,IAAAA,KAAK,EAAEA,KAFsC;AAG7CD,IAAAA,SAAS,EAAEA;AAHkC,GAAvB;AAAA,CAAjB;AAMP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAKC,IAAL,EAAWC,OAAX;AAAA,SAAwB;AAC/CJ,IAAAA,IAAI,EAAE,YADyC;AAE/CE,IAAAA,EAAE,EAAEA,EAF2C;AAG/CC,IAAAA,IAAI,EAAEA,IAHyC;AAI/CC,IAAAA,OAAO,EAAEA;AAJsC,GAAxB;AAAA,CAAlB;AAOP,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC;AAAA;AAAA,wEAAI,iBAAgBC,QAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACzBC,cAAAA,GADyB,aAChBP,OADgB;AAE/BQ,cAAAA,OAAO,CAACC,GAAR,yBAA6BF,GAA7B;AAF+B;AAAA,qBAGVG,KAAK,CAACH,GAAD,CAHK;;AAAA;AAGzBI,cAAAA,MAHyB;AAAA;AAAA,qBAIZA,MAAM,CAACC,IAAP,EAJY;;AAAA;AAIzBC,cAAAA,IAJyB;AAAA,qDAKTA,IALS;;AAAA;AAK/B,oEAA4B;AAAjBC,kBAAAA,OAAiB;AAC1BR,kBAAAA,QAAQ,CAACV,SAAS,CAACkB,OAAO,CAACC,GAAT,EAAcD,OAAO,CAAChB,IAAtB,EAA4BgB,OAAO,CAACf,OAApC,CAAV,CAAR;AACD;AAP8B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAUP,OAAO,IAAMiB,UAAU,GAAG,SAAbA,UAAa,CAAClB,IAAD;AAAA;AAAA,yEAAU,kBAAgBQ,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACXI,KAAK,WAAIV,OAAJ,eAAuB;AACjDiB,gBAAAA,MAAM,EAAE,MADyC;AAEjDC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAFwC;AAKjDC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEvB,kBAAAA,IAAI,EAAEA;AAAR,iBAAf;AAL2C,eAAvB,CADM;;AAAA;AAC5BwB,cAAAA,QAD4B;AAAA;AAAA,qBAQVA,QAAQ,CAACV,IAAT,EARU;;AAAA;AAQ5BW,cAAAA,SAR4B;AASlCjB,cAAAA,QAAQ,CAACV,SAAS,CAAC2B,SAAS,CAACR,GAAX,EAAgBQ,SAAS,CAACzB,IAA1B,EAAgCyB,SAAS,CAACxB,OAA1C,CAAV,CAAR;;AATkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAYP,OAAO,IAAMyB,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAW/B,KAAX;AAAA;AAAA,yEAAqB,kBAAgBY,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACrBI,KAAK,WAAIV,OAAJ,sBAAuByB,QAAvB,eAA2C;AACrER,gBAAAA,MAAM,EAAE,MAD6D;AAErEC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAF4D;AAKrEC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE3B,kBAAAA,KAAK,EAAEA;AAAT,iBAAf;AAL+D,eAA3C,CADgB;;AAAA;AACtC4B,cAAAA,QADsC;AAAA;AAAA,qBAQvBA,QAAQ,CAACV,IAAT,EARuB;;AAAA;AAQtCc,cAAAA,MARsC;AAS5CpB,cAAAA,QAAQ,CAACd,QAAQ,CAACkC,MAAM,CAACX,GAAR,EAAarB,KAAb,CAAT,CAAR;;AAT4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["export const addHobby = (artwalkId, hobby) => ({\n  type: 'ADD_HOBBY',\n  hobby: hobby,\n  artwalkId: artwalkId\n});\n\nexport const addKitten = (id, name, hobbies) => ({\n  type: 'ADD_KITTEN',\n  id: id,\n  name: name,\n  hobbies: hobbies\n});\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport const fetchKittens = _ => async function (dispatch) {\n  const url = `${API_URL}/artwalks`;\n  console.log(`Fetching from ${url}`);\n  const result = await fetch(url);\n  const data = await result.json();\n  for (const artwalk of data) {\n    dispatch(addKitten(artwalk._id, artwalk.name, artwalk.hobbies));\n  }\n};\n\nexport const postKitten = (name) => async function (dispatch) {\n  const response = await fetch(`${API_URL}/kittens`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\"\n    },\n    body: JSON.stringify({ name: name })\n  });\n  const newKitten = await response.json();\n  dispatch(addKitten(newKitten._id, newKitten.name, newKitten.hobbies));\n};\n\nexport const postHobby = (kittenId, hobby) => async function (dispatch) {\n  const response = await fetch(`${API_URL}/kittens/${kittenId}/hobbies`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\"\n    },\n    body: JSON.stringify({ hobby: hobby })\n  });\n  const kitten = await response.json();\n  dispatch(addHobby(kitten._id, hobby));\n};"]},"metadata":{},"sourceType":"module"}