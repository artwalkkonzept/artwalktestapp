{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Desktop/artwalktestappen/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _createForOfIteratorHelper from \"/Users/admin/Desktop/artwalktestappen/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/artwalktestappen/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var addBild = function addBild(artwalkId, hobby) {\n  return {\n    type: 'ADD_HOBBY',\n    bild: bild,\n    artwalkId: artwalkId\n  };\n};\nexport var addArtwalk = function addArtwalk(id, name, hobbies) {\n  return {\n    type: 'ADD_ARTWALK',\n    id: id,\n    name: name,\n    bilds: bilds\n  };\n};\nvar API_URL = process.env.REACT_APP_API_URL;\nexport var fetchArtwalks = function fetchArtwalks(_) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var url, result, data, _iterator, _step, artwalk;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"\".concat(API_URL, \"/artwalks\");\n              console.log(\"Fetching from \".concat(url));\n              _context.next = 4;\n              return fetch(url);\n\n            case 4:\n              result = _context.sent;\n              _context.next = 7;\n              return result.json();\n\n            case 7:\n              data = _context.sent;\n              _iterator = _createForOfIteratorHelper(data);\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  artwalk = _step.value;\n                  dispatch(addArtwalk(artwalk._id, artwalk.name, artwalk.bilds));\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var postArtwalk = function postArtwalk(name) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response, newArtwalk;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"\".concat(API_URL, \"/artwalks\"), {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json; charset=utf-8\"\n                },\n                body: JSON.stringify({\n                  name: name\n                })\n              });\n\n            case 2:\n              response = _context2.sent;\n              _context2.next = 5;\n              return response.json();\n\n            case 5:\n              newArtwalk = _context2.sent;\n              dispatch(addArtwalk(newArtwalk._id, newArtwalk.name, newArtwalk.bilds));\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var postBild = function postBild(artwalkId, bild) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var response, artwalk;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(\"\".concat(API_URL, \"/artwalks/\").concat(artwalkId, \"/bilds\"), {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json; charset=utf-8\"\n                },\n                body: JSON.stringify({\n                  bild: bild\n                })\n              });\n\n            case 2:\n              response = _context3.sent;\n              _context3.next = 5;\n              return response.json();\n\n            case 5:\n              artwalk = _context3.sent;\n              dispatch(addBild(artwalk._id, bild));\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/admin/Desktop/artwalktestappen/client/src/actions/index.js"],"names":["addBild","artwalkId","hobby","type","bild","addArtwalk","id","name","hobbies","bilds","API_URL","process","env","REACT_APP_API_URL","fetchArtwalks","_","dispatch","url","console","log","fetch","result","json","data","artwalk","_id","postArtwalk","method","headers","body","JSON","stringify","response","newArtwalk","postBild"],"mappings":";;;AAAA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,SAAD,EAAYC,KAAZ;AAAA,SAAuB;AAC5CC,IAAAA,IAAI,EAAE,WADsC;AAE5CC,IAAAA,IAAI,EAAEA,IAFsC;AAG5CH,IAAAA,SAAS,EAAEA;AAHiC,GAAvB;AAAA,CAAhB;AAMP,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAKC,IAAL,EAAWC,OAAX;AAAA,SAAwB;AAChDL,IAAAA,IAAI,EAAE,aAD0C;AAEhDG,IAAAA,EAAE,EAAEA,EAF4C;AAGhDC,IAAAA,IAAI,EAAEA,IAH0C;AAIhDE,IAAAA,KAAK,EAAEA;AAJyC,GAAxB;AAAA,CAAnB;AAOP,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,CAAC;AAAA;AAAA,wEAAI,iBAAgBC,QAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC1BC,cAAAA,GAD0B,aACjBP,OADiB;AAEhCQ,cAAAA,OAAO,CAACC,GAAR,yBAA6BF,GAA7B;AAFgC;AAAA,qBAGXG,KAAK,CAACH,GAAD,CAHM;;AAAA;AAG1BI,cAAAA,MAH0B;AAAA;AAAA,qBAIbA,MAAM,CAACC,IAAP,EAJa;;AAAA;AAI1BC,cAAAA,IAJ0B;AAAA,qDAKVA,IALU;;AAAA;AAKhC,oEAA4B;AAAjBC,kBAAAA,OAAiB;AAC1BR,kBAAAA,QAAQ,CAACX,UAAU,CAACmB,OAAO,CAACC,GAAT,EAAcD,OAAO,CAACjB,IAAtB,EAA4BiB,OAAO,CAACf,KAApC,CAAX,CAAR;AACD;AAP+B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAUP,OAAO,IAAMiB,WAAW,GAAG,SAAdA,WAAc,CAACnB,IAAD;AAAA;AAAA,yEAAU,kBAAgBS,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACZI,KAAK,WAAIV,OAAJ,gBAAwB;AAClDiB,gBAAAA,MAAM,EAAE,MAD0C;AAElDC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAFyC;AAKlDC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAExB,kBAAAA,IAAI,EAAEA;AAAR,iBAAf;AAL4C,eAAxB,CADO;;AAAA;AAC7ByB,cAAAA,QAD6B;AAAA;AAAA,qBAQVA,QAAQ,CAACV,IAAT,EARU;;AAAA;AAQ7BW,cAAAA,UAR6B;AASnCjB,cAAAA,QAAQ,CAACX,UAAU,CAAC4B,UAAU,CAACR,GAAZ,EAAiBQ,UAAU,CAAC1B,IAA5B,EAAkC0B,UAAU,CAACxB,KAA7C,CAAX,CAAR;;AATmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAYP,OAAO,IAAMyB,QAAQ,GAAG,SAAXA,QAAW,CAACjC,SAAD,EAAYG,IAAZ;AAAA;AAAA,yEAAqB,kBAAgBY,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACpBI,KAAK,WAAIV,OAAJ,uBAAwBT,SAAxB,aAA2C;AACrE0B,gBAAAA,MAAM,EAAE,MAD6D;AAErEC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAF4D;AAKrEC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE3B,kBAAAA,IAAI,EAAEA;AAAR,iBAAf;AAL+D,eAA3C,CADe;;AAAA;AACrC4B,cAAAA,QADqC;AAAA;AAAA,qBAQrBA,QAAQ,CAACV,IAAT,EARqB;;AAAA;AAQrCE,cAAAA,OARqC;AAS3CR,cAAAA,QAAQ,CAAChB,OAAO,CAACwB,OAAO,CAACC,GAAT,EAAcrB,IAAd,CAAR,CAAR;;AAT2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["export const addBild = (artwalkId, hobby) => ({\n  type: 'ADD_HOBBY',\n  bild: bild,\n  artwalkId: artwalkId\n});\n\nexport const addArtwalk = (id, name, hobbies) => ({\n  type: 'ADD_ARTWALK',\n  id: id,\n  name: name,\n  bilds: bilds\n});\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport const fetchArtwalks = _ => async function (dispatch) {\n  const url = `${API_URL}/artwalks`;\n  console.log(`Fetching from ${url}`);\n  const result = await fetch(url);\n  const data = await result.json();\n  for (const artwalk of data) {\n    dispatch(addArtwalk(artwalk._id, artwalk.name, artwalk.bilds));\n  }\n};\n\nexport const postArtwalk = (name) => async function (dispatch) {\n  const response = await fetch(`${API_URL}/artwalks`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\"\n    },\n    body: JSON.stringify({ name: name })\n  });\n  const newArtwalk = await response.json();\n  dispatch(addArtwalk(newArtwalk._id, newArtwalk.name, newArtwalk.bilds));\n};\n\nexport const postBild = (artwalkId, bild) => async function (dispatch) {\n  const response = await fetch(`${API_URL}/artwalks/${artwalkId}/bilds`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\"\n    },\n    body: JSON.stringify({ bild: bild })\n  });\n  const artwalk = await response.json();\n  dispatch(addBild(artwalk._id, bild));\n};"]},"metadata":{},"sourceType":"module"}