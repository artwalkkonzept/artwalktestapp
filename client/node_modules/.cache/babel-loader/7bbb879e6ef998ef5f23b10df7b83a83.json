{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/admin/Desktop/artwalktestappen/client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\"; //import { applyMiddleware, createStore } from \"redux\";\n//import thunkMiddleware from \"redux-thunk\";\n// Our reducer functions lives inside this module\n//import reducer from \"./reducers\";\n// Import fetch action\n//import { fetchArtwalks } from \"./actions\";\n// Logging middleware for the store. Prints out all actions in the redux store to the browser console.\n\n/*const logger = store => next => action => {\n  console.group(action.type);\n  console.info(\"dispatching\", action);\n  let result = next(action);\n  console.log(\"next state\", store.getState());\n  console.groupEnd();\n  return result;\n};*/\n// Create the store with some initial data from a json file.\n// Adding the logging middleware from above as well.\n//const store = createStore(reducer, applyMiddleware(logger, thunkMiddleware));\n//store.dispatch(fetchArtwalks());\n\nReactDOM.render(\n/*#__PURE__*/\n// Provide the store to all components from <App> and below\n_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this), document.getElementById('root')); //<Provider store={store}>","map":{"version":3,"sources":["/Users/admin/Desktop/artwalktestappen/client/src/index.js"],"names":["React","ReactDOM","App","Provider","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEAF,QAAQ,CAACG,MAAT;AAAA;AACE;AACA,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,QAAD;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QAFF,EAOEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPF,E,CASA","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n//import { applyMiddleware, createStore } from \"redux\";\n//import thunkMiddleware from \"redux-thunk\";\n\n// Our reducer functions lives inside this module\n//import reducer from \"./reducers\";\n\n// Import fetch action\n//import { fetchArtwalks } from \"./actions\";\n\n// Logging middleware for the store. Prints out all actions in the redux store to the browser console.\n/*const logger = store => next => action => {\n  console.group(action.type);\n  console.info(\"dispatching\", action);\n  let result = next(action);\n  console.log(\"next state\", store.getState());\n  console.groupEnd();\n  return result;\n};*/\n\n// Create the store with some initial data from a json file.\n// Adding the logging middleware from above as well.\n//const store = createStore(reducer, applyMiddleware(logger, thunkMiddleware));\n//store.dispatch(fetchArtwalks());\n\nReactDOM.render(\n  // Provide the store to all components from <App> and below\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n//<Provider store={store}>"]},"metadata":{},"sourceType":"module"}